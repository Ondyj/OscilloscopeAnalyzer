<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OscilloscopeCLI</name>
    </assembly>
    <members>
        <member name="T:OscilloscopeCLI.Protocols.IExportableAnalyzer">
            <summary>
            Rozhrani pro analyzatory, ktere umoznuji export vysledku do souboru.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.IExportableAnalyzer.ProtocolName">
            <summary>
            Nazev protokolu, ktery analyzator zpracovava.
            Tento nazev je pouzit pro identifikaci protokolu pri exportu vysledku.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.IExportableAnalyzer.ExportResults(System.String)">
            <summary>
            Exportuje vysledky analyzy do specifikovaneho souboru.
            </summary>
            <param name="outputPath">Cesta k vystupnimu souboru, kam budou exportovany vysledky.</param>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.IProtocolAnalyzer">
            <summary>
            Rozhrani pro analyzator protokolu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.IProtocolAnalyzer.ProtocolName">
            <summary>
            Nazev analyzovaneho protokolu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.IProtocolAnalyzer.Analyze">
            <summary>
            Metoda pro proveden√≠ analyzy signalu podle daneho protokolu.
            </summary>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.IProtocolSettings">
            <summary>
            Rozhrani pro nastaveni protokolu, ktere definuje nazev protokolu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.IProtocolSettings.ProtocolName">
            <summary>
            Nazev protokolu.
            </summary>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.ISearchableAnalyzer">
            <summary>
            Rozhrani pro analyzatory, ktere umoznuji hledani a praci s nalezenymi shodami.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.ISearchableAnalyzer.Search(System.Byte)">
            <summary>
            Vyhleda vsechny shody pro zadanou hodnotu.
            </summary>
            <param name="value">Hledana hodnota bajtu.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.ISearchableAnalyzer.HasMatches">
            <summary>
            Vrati, zda existuji nejake nalezene shody.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.ISearchableAnalyzer.MatchCount">
            <summary>
            Vrati pocet nalezenych shod.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.ISearchableAnalyzer.GetMatchDisplay(System.Int32)">
            <summary>
            Vrati textovou reprezentaci nalezene shody pro zobrazeni.
            </summary>
            <param name="index">Index shody.</param>
            <returns>Formatovany retezec s informacemi o shode.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.ISearchableAnalyzer.GetMatchTimestamp(System.Int32)">
            <summary>
            Vrati casovou znacku nalezene shody.
            </summary>
            <param name="index">Index shody.</param>
            <returns>Casova znacka v sekundach.</returns>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.SpiDecodedByte">
            <summary>
            Predstavuje dekodovany bajt zachyceny behem SPI komunikace.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiDecodedByte.Timestamp">
            <summary>
            Cas zachyceni bajtu v sekundach.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiDecodedByte.ValueMOSI">
            <summary>
            Hodnota prijata na lince MOSI (Master Out Slave In).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiDecodedByte.ValueMISO">
            <summary>
            Hodnota prijata na lince MISO (Master In Slave Out).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiDecodedByte.Error">
            <summary>
            Popis chyby, pokud pri dekodovani doslo k chybe; jinak null.
            </summary>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.SpiExporter">
            <summary>
            Trida pro export dekodovanych SPI bajtu do CSV souboru.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiExporter.decodedBytes">
            <summary>
            Seznam dekodovanych SPI bajtu.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiExporter.hasMiso">
            <summary>
            Priznak, zda byl dostupny kanal MISO.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiExporter.#ctor(System.Collections.Generic.List{OscilloscopeCLI.Protocols.SpiDecodedByte},System.Boolean)">
            <summary>
            Vytvori novou instanci tridy SpiExporter.
            </summary>
            <param name="decodedBytes">Seznam dekodovanych bajtu.</param>
            <param name="hasMiso">Priznak, zda je pouzit kanal MISO.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiExporter.ExportToCsv(System.String)">
            <summary>
            Exportuje dekodovana data do CSV souboru na zadane ceste.
            </summary>
            <param name="path">Cesta k vystupnimu souboru CSV.</param>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.SpiMatchSearcher">
            <summary>
            Trida pro vyhledavani SPI bajtu podle hodnoty.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiMatchSearcher.decodedBytes">
            <summary>
            Seznam dekodovanych SPI bajtu.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiMatchSearcher.matches">
            <summary>
            Seznam nalezenych vysledku odpovidajicich hledane hodnote.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiMatchSearcher.#ctor(System.Collections.Generic.List{OscilloscopeCLI.Protocols.SpiDecodedByte})">
            <summary>
            Vytvori novou instanci tridy SpiMatchSearcher.
            </summary>
            <param name="decodedBytes">Seznam dekodovanych bajtu pro vyhledavani.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiMatchSearcher.Search(System.Byte)">
            <summary>
            Vyhleda vsechny bajty, ktere odpovidaji zadane hodnote na MOSI nebo MISO.
            </summary>
            <param name="value">Hledana hodnota bajtu.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiMatchSearcher.HasMatches">
            <summary>
            Vrati, zda existuji nejake nalezene vysledky.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiMatchSearcher.MatchCount">
            <summary>
            Vrati pocet nalezenych vysledku.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiMatchSearcher.GetMatch(System.Int32)">
            <summary>
            Vrati nalezeny vysledek podle indexu.
            </summary>
            <param name="index">Index vysledku.</param>
            <returns>SpiDecodedByte odpovidajici hledanemu indexu.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiMatchSearcher.GetMatchDisplay(System.Int32)">
            <summary>
            Vrati textovou reprezentaci nalezeneho vysledku pro zobrazeni.
            </summary>
            <param name="index">Index vysledku.</param>
            <returns>Formatovany retezec s informacemi o vysledku.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiMatchSearcher.GetMatchTimestamp(System.Int32)">
            <summary>
            Vrati casovou znacku nalezeneho vysledku.
            </summary>
            <param name="index">Index vysledku.</param>
            <returns>Casova znacka v sekundach.</returns>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer">
            <summary>
            Analyzer pro dekodovani SPI komunikace ze signalovych dat.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.signalData">
            <summary>
            Vstupni signalova data (timestamp, hodnota).
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.settings">
            <summary>
            Nastaveni SPI analyzy (CPOL, CPHA, pocet bitu).
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.hasMiso">
            <summary>
            Udava, zda je dostupny kanal MISO.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.DecodedBytes">
            <summary>
            Seznam dekodovanych bajtu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.ProtocolName">
            <summary>
            Nazev analyzovaneho protokolu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Tuple{System.Double,System.Double}}},OscilloscopeCLI.Protocols.SpiSettings)">
            <summary>
            Vytvori novou instanci analyzatoru SPI protokolu.
            </summary>
            <param name="signalData">Signalova data.</param>
            <param name="settings">Nastaveni SPI analyzatoru.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.Analyze">
            <summary>
            Provede analyzu SPI komunikace.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.AnalyzeTransfer(System.Double,System.Double,System.Collections.Generic.List{OscilloscopeCLI.Signal.DigitalTransition},OscilloscopeCLI.Signal.DigitalSignalAnalyzer,OscilloscopeCLI.Signal.DigitalSignalAnalyzer)">
            <summary>
            Analyzuje jednotlive SPI prenosy v ramci jednoho CS aktivniho segmentu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.GetBitAtTime(System.Collections.Generic.List{OscilloscopeCLI.Signal.SignalSample},System.Double)">
            <summary>
            Vrati stav signalu v danem case.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.PackBits(System.Collections.Generic.List{System.Boolean})">
            <summary>
            Prevede seznam bitu (LSB first) na bajt.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.Search(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.HasMatches">
            <inheritdoc/>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.MatchCount">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.GetMatchDisplay(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.GetMatchTimestamp(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.SpiProtocolAnalyzer.ExportResults(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.SpiSettings">
            <summary>
            Nastaveni pro analyzator SPI protokolu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiSettings.ProtocolName">
            <summary>
            Nazev protokolu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiSettings.Cpol">
            <summary>
            Hodnota CPOL (Clock Polarity).
            True = inverzni logika hodinoveho signalu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiSettings.Cpha">
            <summary>
            Hodnota CPHA (Clock Phase).
            Udava, zda se data nactou na predni nebo zadni hrane.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.SpiSettings.BitsPerWord">
            <summary>
            Pocet bitu v jednom prenosu (defaultne 8 bitu).
            </summary>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.UartDecodedByte">
            <summary>
            Reprezentuje jeden dekodovany bajt prenoseny po protokolu UART.
            Obsahuje cas, kanal, hodnotu bajtu a pripadnou chybu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartDecodedByte.Timestamp">
            <summary>
            Casova znacka kdy byl bajt detekovan (v sekundach).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartDecodedByte.Channel">
            <summary>
            Nazev kanalu ze ktereho byl bajt nacten.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartDecodedByte.Value">
            <summary>
            Hodnota bajtu nactena z datove linky.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartDecodedByte.Error">
            <summary>
            Popis chyby spojene s timto bajtem (pokud existuje), jinak null.
            </summary>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.UartExporter">
            <summary>
            Trida pro export dekodovanych UART bajtu do CSV souboru.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.UartExporter.decodedBytes">
            <summary>
            Seznam dekodovanych UART bajtu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartExporter.#ctor(System.Collections.Generic.List{OscilloscopeCLI.Protocols.UartDecodedByte})">
            <summary>
            Vytvori novou instanci tridy UartExporter.
            </summary>
            <param name="decodedBytes">Seznam dekodovanych bajtu k exportu.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartExporter.ExportToCsv(System.String)">
            <summary>
            Exportuje dekodovana UART data do CSV souboru na zadane ceste.
            </summary>
            <param name="path">Cesta k vystupnimu CSV souboru.</param>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.UartMatchSearcher">
            <summary>
            Trida pro vyhledavani UART bajtu podle hodnoty.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.UartMatchSearcher.decodedBytes">
            <summary>
            Seznam dekodovanych UART bajtu.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.UartMatchSearcher.matches">
            <summary>
            Seznam nalezenych vysledku odpovidajicich hledane hodnote.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartMatchSearcher.#ctor(System.Collections.Generic.List{OscilloscopeCLI.Protocols.UartDecodedByte})">
            <summary>
            Vytvori novou instanci tridy UartMatchSearcher.
            </summary>
            <param name="decodedBytes">Seznam dekodovanych bajtu pro vyhledavani.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartMatchSearcher.Search(System.Byte)">
            <summary>
            Vyhleda vsechny bajty, ktere odpovidaji zadane hodnote.
            </summary>
            <param name="value">Hledana hodnota bajtu.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartMatchSearcher.HasMatches">
            <summary>
            Vrati, zda existuji nejake nalezene vysledky.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartMatchSearcher.MatchCount">
            <summary>
            Vrati pocet nalezenych vysledku.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartMatchSearcher.GetMatch(System.Int32)">
            <summary>
            Vrati nalezeny vysledek podle indexu.
            </summary>
            <param name="index">Index vysledku.</param>
            <returns>UartDecodedByte odpovidajici hledanemu indexu.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartMatchSearcher.GetMatchDisplay(System.Int32)">
            <summary>
            Vrati textovou reprezentaci nalezeneho vysledku pro zobrazeni.
            </summary>
            <param name="index">Index vysledku.</param>
            <returns>Formatovany retezec s informacemi o vysledku.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartMatchSearcher.GetMatchTimestamp(System.Int32)">
            <summary>
            Vrati casovou znacku nalezeneho vysledku.
            </summary>
            <param name="index">Index vysledku.</param>
            <returns>Casova znacka v sekundach.</returns>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.UartProtocolAnalyzer">
            <summary>
            Analyzer pro dekodovani UART komunikace ze signalovych dat.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.channelSamples">
            <summary>
            Vstupni signalova data (timestamp, logicka hodnota).
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.settings">
            <summary>
            Nastaveni UART analyzy (baud rate, data bits, parita, stop bity, idle uroven).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.DecodedBytes">
            <summary>
            Seznam dekodovanych bajtu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.ProtocolName">
            <summary>
            Nazev analyzovaneho protokolu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Tuple{System.Double,System.Double}}},OscilloscopeCLI.Protocols.UartSettings)">
            <summary>
            Vytvori novou instanci analyzatoru UART protokolu.
            </summary>
            <param name="signalData">Signalova data.</param>
            <param name="settings">Nastaveni UART analyzatoru.</param>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.Analyze">
            <summary>
            Provede analyzu UART komunikace.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.AnalyzeChannel(System.String,System.Collections.Generic.List{OscilloscopeCLI.Signal.SignalSample},System.Double,System.Boolean)">
            <summary>
            Analyzuje jednotlive signaly v kanale.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.DecodeByte(System.Collections.Generic.List{OscilloscopeCLI.Signal.SignalSample},System.Double,System.Double,System.Boolean)">
            <summary>
            Dekoduje jeden UART bajt ze vzorku.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.GetBitAtTime(System.Collections.Generic.List{OscilloscopeCLI.Signal.SignalSample},System.Double)">
            <summary>
            Zjisti hodnotu signalu v urcitem case.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.CheckParity(System.Collections.Generic.List{OscilloscopeCLI.Signal.SignalSample},System.Double,System.Byte,System.Double)">
            <summary>
            Overi spravnost parity bajtu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.CheckStopBit(System.Collections.Generic.List{OscilloscopeCLI.Signal.SignalSample},System.Double,System.Double,System.Boolean)">
            <summary>
            Overi spravnost stop bitu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.GetStopBitTime(System.Double,System.Double)">
            <summary>
            Vypocita casovou znacku pro stop bit.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.CalculateParity(System.Byte)">
            <summary>
            Spocita paritu bajtu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.Search(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.HasMatches">
            <inheritdoc/>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.MatchCount">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.GetMatchDisplay(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.GetMatchTimestamp(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OscilloscopeCLI.Protocols.UartProtocolAnalyzer.ExportResults(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.UartSettings">
            <summary>
            Nastaveni pro analyzator UART protokolu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartSettings.ProtocolName">
            <summary>
            Nazev protokolu (UART).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartSettings.BaudRate">
            <summary>
            Baud rate (rychlost prenosu dat).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartSettings.DataBits">
            <summary>
            Pocet datovych bitu v jednom prenosu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartSettings.Parity">
            <summary>
            Parita (None, Even, Odd).
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartSettings.StopBits">
            <summary>
            Pocet stop bitu.
            </summary>
        </member>
        <member name="P:OscilloscopeCLI.Protocols.UartSettings.IdleLevelHigh">
            <summary>
            Udava, zda je idle uroven vysok√° (true = vysok√°, false = n√≠zk√°).
            </summary>
        </member>
        <member name="T:OscilloscopeCLI.Protocols.Parity">
            <summary>
            Typy parit (None, Even, Odd) pro UART.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.Parity.None">
            <summary>
            Bez parity.
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.Parity.Even">
            <summary>
            Parita typu "Even" (suda).
            </summary>
        </member>
        <member name="F:OscilloscopeCLI.Protocols.Parity.Odd">
            <summary>
            Parita typu "Odd" (lich√°).
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.DigitalSignalAnalyzer.DetectTransitions">
            <summary>
            Detekuje vsechny prechody (hrany) v digitalnim signalu,
            tj. zmenu stavu z 0 na 1 nebo z 1 na 0.
            </summary>
            <returns>Seznam detekovanych prechodu s casem a zmenou stavu.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Signal.DigitalSignalAnalyzer.GetConstantLevelSegments">
            <summary>
            Vrati segmenty, kde mel signal konstantni hodnotu (0 nebo 1),
            vcetne jejich casoveho trvani.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.DigitalSignalAnalyzer.GetSamples">
            <summary>
            Vrati vsechny vzorky signalu pro dalsi analyzu nebo zobrazeni.
            </summary>
            <returns>Seznam vzorku obsahujici cas a stav signalu.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalAnalyzer.DetectSignalType">
            <summary>
            Detekuje, zda je signal digitalni nebo analogovy.
            Digitalni signal obsahuje pouze dve unikatni hodnoty (nap≈ô. 0 a 1).
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalAnalyzer.GetMinMaxValues">
            <summary>
            Vrati minimalni a maximalni hodnotu signalu.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalAnalyzer.DetectPulses(System.Double)">
            <summary>
            Detekuje pulzy v signalu, ktere jsou siroke nad stanovenou mez.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalAnalyzer.CalculateAveragePulseWidth(System.Collections.Generic.List{System.Tuple{System.Double,System.Double}})">
            <summary>
            Vypocita prumernou sirku pulzu.
            </summary>
            <param name="pulses">Seznam pulzu, kde kazdy prvek obsahuje dvojici hodnot: zacatek a konec pulzu.</param>
            <returns>Prumerna sirka pulzu, nebo 0 pokud seznam neobsahuje zadne pulzy.</returns>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalLoader.LoadCsvFile(System.String,System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Nacte signalni data z CSV souboru v ruznych formatech (osciloskop, logicky analyzator, obecny CSV).
            </summary>
            <param name="filePath">Cesta k souboru.</param>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalLoader.LoadOscilloscopeData(System.String[],System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Nacte osciloskopova data, ktera obsahuji X, CH kanaly, Start a Increment.
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalLoader.LoadLogicAnalyzerData(System.String[],System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Nacte data z logickeho analyzatoru
            </summary>
        </member>
        <member name="M:OscilloscopeCLI.Signal.SignalLoader.RemoveEmptyChannels">
            <summary>
            Odstrani kanaly, ktere obsahuji pouze nuly.
            </summary>
        </member>
    </members>
</doc>
